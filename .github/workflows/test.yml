name: CI Tests

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
    
    - name: Build ct CLI
      run: make build
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting and tests in parallel
      run: |
        npx tsc --noEmit &
        npx prettier --check "src/**/*.{js,ts,astro,css}" &
        npm test &
        wait
    
    - name: Build project
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy-preview:
    needs: [test-and-lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    permissions:
      contents: read
      pull-requests: write
      deployments: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies and build in parallel
      run: |
        npm ci &
        make build &
        wait
    
    - name: Update App Store data and generate OG image
      run: |
        echo "Fetching latest app data from App Store..."
        ./ct fetch-appstore || echo "Failed to update app data, using existing data"
        echo "Generating OG image grid from app icons..."
        node scripts/generate-apps-og-grid.js || echo "Failed to generate OG grid, using existing image"
    
    - name: Build project
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run build
    
    - name: Deploy to Cloudflare Pages Preview
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy dist --project-name=compiledthoughts --commit-dirty=true

  deploy-production:
    needs: [test-and-lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    permissions:
      contents: read
      deployments: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies and build in parallel
      run: |
        npm ci &
        make build &
        wait
    
    - name: Update App Store data and generate OG image
      run: |
        echo "Fetching latest app data from App Store..."
        ./ct fetch-appstore || echo "Failed to update app data, using existing data"
        echo "Generating OG image grid from app icons..."
        node scripts/generate-apps-og-grid.js || echo "Failed to generate OG grid, using existing image"
    
    - name: Build project
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run build
    
    - name: Deploy to Cloudflare Pages Production
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy dist --project-name=compiledthoughts --branch=master --commit-dirty=true