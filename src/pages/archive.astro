---
import BaseLayout from '@layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog'))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Group posts by year
const postsByYear = posts.reduce((acc, post) => {
  const year = post.data.pubDate.getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof posts>);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout
  title="Archive - Compiled Thoughts"
  description="All blog posts organized by year"
>
  <div class="py-8">
    <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-8">
      Archive
    </h1>
    
    {years.map((year) => (
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4 pb-2 border-b border-gray-200 dark:border-gray-800">
          {year}
        </h2>
        
        <div class="space-y-4">
          {postsByYear[Number(year)].map((post) => {
            const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
              month: 'short',
              day: 'numeric',
            });
            
            return (
              <article class="flex items-baseline gap-4">
                <time
                  datetime={post.data.pubDate.toISOString()}
                  class="text-sm text-gray-500 dark:text-gray-400 font-mono flex-shrink-0"
                >
                  {formattedDate}
                </time>
                <div class="flex-grow">
                  <a
                    href={`/blog/${post.slug}`}
                    class="text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                  >
                    {post.data.title}
                  </a>
                  {post.data.tags.length > 0 && (
                    <div class="inline-flex gap-2 ml-2">
                      {post.data.tags.map(tag => (
                        <a
                          href={`/tags/${tag}`}
                          class="text-xs text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400"
                        >
                          #{tag}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              </article>
            );
          })}
        </div>
      </section>
    ))}
    
    {posts.length === 0 && (
      <p class="text-gray-600 dark:text-gray-400">
        No posts in the archive yet.
      </p>
    )}
  </div>
</BaseLayout>